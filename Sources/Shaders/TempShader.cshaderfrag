#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_nonuniform_qualifier : enable

#include "common.cshaderh"

layout(location = 0) in vec3 fragColor;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in flat uint materialIndex;

layout(location = 0) out vec4 outColor;


Material ReadMaterial(uint RawOffset, uint InstanceIndex)
{
    const uint Stride = 2*4*4;
    vec4 rawData = ReadDataWithOffset4F(RawOffset, Stride, 0, InstanceIndex);

    Material mat;
    mat.color = rawData.xyz;
    mat.TextureIndex = floatBitsToUint(rawData.w);

    return mat;
}

void main()
{
    // nonuniformEXT = nonuniformEXT(any var or subgroupBroadcastFirst())
    // https://github.com/KhronosGroup/Vulkan-Samples/blob/f12427dcf59b71fec030fe890423349db83a8c24/samples/extensions/descriptor_indexing/README.md

    Material mat = ReadMaterial(materialIndex, 0);

    vec3 albedo = texture(sampler2D(g_textures[nonuniformEXT(mat.TextureIndex)], g_texSampler), texCoord).rgb; 
    outColor = vec4(mat.color * albedo, 1.f);
}
